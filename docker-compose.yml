services:
#  postgres:
#    image: postgres:latest
#    container_name: postgres_gsn
#    environment:
#      POSTGRES_USER: admin
#      POSTGRES_PASSWORD: my_super_password
#      POSTGRES_DB: gsn
#      PGDATA: /var/lib/postgresql/data/pgdata
#    ports:
#      - '5433:5432'
#    volumes:
#      - pgdata:/var/lib/postgresql/data/pgdata
#    deploy:
#      resources:
#        limits:
#          cpus: '0.50'
#          memory: 512M
#        reservations:
#          cpus: '0.25'
#          memory: 256M
#    command: >
#      postgres -c max_connections=1000
#               -c shared_buffers=256MB
#               -c effective_cache_size=768MB
#               -c maintenance_work_mem=64MB
#               -c checkpoint_completion_target=0.7
#               -c wal_buffers=16MB
#               -c default_statistics_target=100
#    healthcheck:
#      test: [ 'CMD-SHELL', 'pg_isready -U postgres_user -d postgres_db' ]
#      interval: 30s
#      timeout: 10s
#      retries: 5
#    restart: unless-stopped
#    tty: true
#    stdin_open: true

  mongo:
    image: mongo
    container_name: mongo_gsn
    restart: always
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo_data:/data/db

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH: false

  redis:
    image: "redis:latest"
    container_name: redis_cache
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - redis_data:/data
    
  redis_viewer:
    image: marian/rebrow
    container_name: redis_viewe
    ports:
    - "5001:5001"


volumes:
  pgdata:
    driver: local
  redis_data:
  mongo_data:
